const handleUpdateProduk = async () => {
  if (!selectedProduk) return;
  try {
    const values = await form.validateFields();

    // Buat FormData untuk menyertakan file gambar
    const formData = new FormData();
    
    // Tambahkan field yang diperlukan ke dalam FormData
    formData.append('nama_produk', values.nama_produk);
    formData.append('harga_produk', values.harga_produk);
    formData.append('stok', values.stok);
    formData.append('kategori', values.kategori);

    // Tambahkan file gambar jika ada
    if (values.gambar_produk && values.gambar_produk[0]) {
      formData.append('gambar_produk', values.gambar_produk[0].originFileObj);
    }

    console.log("Updating product with ID:", selectedProduk.id_produk);

    // Kirim data ke backend menggunakan axios dengan headers multipart/form-data
    await axios.put(
      `http://localhost:3222/produk/${selectedProduk.nama_produk}`, // Gunakan nama_produk di URL
      formData,
      {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      }
    );

    message.success("Produk berhasil diperbarui");
    setIsEditModalVisible(false);
    setSelectedProduk(null);
    form.resetFields();
  } catch (error) {
    if (axios.isAxiosError(error) && error.response) {
      console.error("Error updating product:", error.response.data);
      message.error(
        `Gagal memperbarui produk: ${error.response.data.message}`
      );
    } else {
      console.error("Unknown error:", error);
      message.error("Gagal memperbarui produk: kesalahan tidak terduga");
    }
  }
};
